version: '3'
services:
  db:
    image: mysql:5.7
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=mypassword
      - MYSQL_DATABASE=cinq
      - MYSQL_USER=cinq
      - MYSQL_PASSWORD=changeme
    volumes:
      - "./database:/var/lib/mysql"

  nginx:
    build:
      context: ./../
      dockerfile: ./docker/nginx-Dockerfile
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:8443:443"
    depends_on:
      - frontend
      - api

  frontend:
    build:
      context: ./../
      dockerfile: ./docker/frontend-Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    #volumes: 
      #- "./../../cinq-frontend:/frontend"
      # Change the above path to cinq-frontend to fit your directory structure

  base:
    build:
      context: ./../
      dockerfile: ./docker/base-Dockerfile
    volumes:
      - "./files/dev-backend-config.json:/usr/local/etc/cloud-inquisitor/config.json"
      - "./files/logging.json:/usr/local/etc/cloud-inquisitor/logging.json"

  # To reference the base image built inside the docker-compose.yml
  #  it must be prefixed with by the COMPOSE_PROJECT_NAME, defined in .env,
  # followed by an '_'.  By default the name is "cinq_base"
  api:
    image: cinq_base
    ports:
      - "127.0.0.1:5000:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    volumes:
      - "./files/dev-backend-config.json:/usr/local/etc/cloud-inquisitor/config.json"
      - "./files/logging.json:/usr/local/etc/cloud-inquisitor/logging.json"
      - "./../:/cloud-inquisitor"
      - "./../../cinq-collector-aws:/plugins/cinq-collector-aws"
    command: >
      bash -c " source /env/bin/activate;

      cd /cloud-inquisitor/backend
      && python setup.py clean --all install > /dev/null;

      if [ -d /plugins ]; then
         cd /plugins;
         for plugin in `ls /plugins`; do 
             (cd $$plugin && python3 setup.py clean --all install)  
         done;
      fi

      cloud-inquisitor runserver -h 0.0.0.0 -p 5000;"
    depends_on:
      - base
      - db

  scheduler:
    image: cinq_base
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    volumes:
      - "./files/dev-backend-config.json:/usr/local/etc/cloud-inquisitor/config.json"
      - "./files/logging.json:/usr/local/etc/cloud-inquisitor/logging.json"
      - "./../:/cloud-inquisitor"
    command: >
      bash -c " source /env/bin/activate;

      cd /cloud-inquisitor/backend
      && python setup.py clean --all install > /dev/null;

      if [ -d /plugins ]; then
         cd /plugins;
         for plugin in `ls /plugins`; do 
             (cd $$plugin && python3 setup.py clean --all install)
         done;
      fi

      cloud-inquisitor scheduler"
    depends_on:
      - base
      - db
      - api
